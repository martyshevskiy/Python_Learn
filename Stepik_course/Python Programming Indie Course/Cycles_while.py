'''Напишите программу, которая распечатает все натуральные числа
кратные 5 от 195 до 6785 включительно в порядке убывания.'''

# num = 6785
# while num >= 195:
#     if num % 5 == 0:
#         print(num)
#     num -= 1

'''----------------------------'''

'''Мишка Лимак хочет стать самым большим медведем, ну, или хотя бы стать больше своего старшего брата Боба.
Сейчас вес Лимака равен a, а вес Боба равен b. Гарантируется, что вес Лимака меньше или равен весу Боба.
Лимак ест много, и его вес утраивается каждый год, а вес Боба удваивается каждый год.
Через сколько целых лет Лимак станет строго больше (т. е. будет весить строго больше) Боба?
В единственной строке находятся два целых числа a и b (1≤a≤b≤10) — веса Лимака и Боба соответственно.'''

# limak, bob = map(int, input().split())
# years = 0
# while limak <= bob:
#     limak *= 3
#     bob *=2
#     years += 1
# print(years)

'''----------------------------'''

'''На вход программе поступает слово. 
Вам необходимо воспроизвести процесс, в котором каждый раз у этого слово будет пропадать первая и последняя буква. 
Этот процесс необходимо закончить, когда в слове останется только одна буква или слово  станет пустой строкой. 
При этом результат каждого этапа нужно выводить
'''

# word = input()
# while len(word) > 0:
#     print(word)
#     word = word[1:-1]

'''----------------------------'''

'''Выведите все точные квадраты натуральных чисел, не превосходящие входного натурального числа N.'''

# num = int(input())
# counter = 1
# while counter ** 2 <= num:
#     print(counter ** 2)
#     counter += 1

'''----------------------------'''

'''В первый день спортсмен пробежал X километров. 
В каждый последующий день он увеличивал пробег на 15% от предыдущего дня. 
Вам необходимо определить номер дня, в который пробег спортсмена составил не менее Y километров. 
Само число Y будем поступать на вход программе.'''

# x, y = map(int, input().split())
# day = 1
# while x <= y:
#     x += (x / 100) * 15
#     day += 1
# print(day)

'''----------------------------'''

'''У Васи есть n пар носков. 
Утром каждого дня, собираясь в школу, Вася должен надеть пару носков. 
Вечером, прийдя со школы, Вася снимает надетые носки и выбрасывает их. 
Каждый m-й день (в дни с номерами m,2m,3m,...) мама покупает Васе одну пару носков. 
Она делает это поздно вечером, поэтому Вася может надеть новые носки не раньше следующего дня. 
На сколько подряд идущих дней Васе хватит носков?'''

# n, m = map(int, input().split())
# day = 0
# while n > 0:
#     n -= 1
#     day += 1
#     if day % m == 0:
#         n += 1
# print(day)

'''----------------------------'''

'''У Василия есть a свечей. 
Когда Василий зажигает новую свечу, сначала она горит ровно один час, а затем тухнет. 
Василий — сообразительный малый, поэтому из b потухших свечей он умеет получать одну новую свечу. 
В последствии эту новую свечу (так же как и другие новые свечи) можно зажечь.'''

# a, b = map(int, input().split())
# time = 0
# while a > 0:
#     a -= 1
#     time += 1
#     if time % b == 0:
#         time += 1
# print(time)

'''----------------------------'''

'''В архитектуре компьютера важную роль играют числа, являющиеся степенями двойки: 1, 2, 4, 8 и так далее. 
Напишите программу, которая проверяет, является ли введённое натуральное число степенью двойки. 
Если да, то выводится сама эта степень; если нет, выводится «НЕТ»'''

# num = int(input())
# degree = 0
# while 2**degree < num:
#     degree += 1
# if 2**degree == num:
#     print(degree)
# else:
#     print('НЕТ')

'''----------------------------'''

'''Возьмём число. Умножим его на его же первую цифру. 
Результат умножим на первую цифру результата. И так далее. 
Например, начнём с 8'''

# num = int(input())
# sum = 0
# while int(str(sum)[0]) != 1 and int(sum) < 1000000000:
#     num = int(str(num)[0]) * num
#     sum = num
# print(sum)

'''----------------------------'''

'''Пользователь вводит целые числа по одному в строке, последовательность оканчивается числом 0. 
Все, что вводится после 0 не относится к последовательности. 
Напишите программу, которая выводит сумму всех членов данной последовательности.'''

# counter = 0
# while True:
#     x = int(input())
#     if x == 0:
#         break
#     counter += x
# print(counter)

'''----------------------------'''

'''На каждой отдельной строчке пользователь вводит друг за другом пароли в виде строки символов. 
Валидными паролями будем считать строки, у которых длина варьируется от 5 до 9 символов включительно. 
Как только вы встретите первый невалидный пароль, ваша программа должна закончить считывать пароли и 
вывести последний введенный валидный пароль.
Гарантируется, что первый пароль всегда валидный'''

# valid_password = ''
# while True:
#     password = input()
#     if 5 <= len(password) <= 9:
#         valid_password = password
#     else:
#         break
# print(valid_password)

'''----------------------------'''

'''У нас в наличии рюкзак, вместимость которого составляет n литров, и 
наша задача забить его до предела максимально возможно. 
Нам поступают вещи, объем которых измеряется также в литрах, и 
мы должны их складывать в наш рюкзак без возможности пропуска. 
Как только суммарный объем новой добавляемой вещи превысит вместимость рюкзака, 
ваша программа должна вывести слово "Довольно!" и затем на отдельных строчках суммарный объем вещей, 
которые мы смогли упаковать в рюкзак, и их количество'''

# backpack_volume = int(input())
# number_things = 0
# occupancy = 0
# while True:
#     thing = int(input())
#     occupancy += thing
#     if occupancy > backpack_volume:
#         occupancy -= thing
#         break
#     number_things += 1
# print('Довольно!', occupancy, number_things, sep='\n')

'''----------------------------'''

'''В последний день уходящего 2016 года Лимак собирается принять участие в соревновании по спортивному программированию. 
Соревнование начнётся в 20:00 и будет продолжаться четыре часа, то есть ровно до полуночи. 
Участникам будет предложено n задач, упорядоченных по возрастанию сложности, то есть задача 1 будет самой лёгкой, 
а задача номер n — самой сложной. Лимак знает, что ему потребуется 5·i минут на решение i-й задачи.
Друзья Лимака планирую устроить роскошную новогоднюю вечеринку и Лимак хочет прибыть в полночь или ранее. 
Он знает, что ему требуется ровно k минут чтобы добрать до места проведения вечеринки от своего дома, 
где он собирается участвовать в соревновании.
Сколько максимум задач может успеть решить Лимак, так чтобы не опоздать на новогоднюю вечеринку?'''


# number_tasks, road_time = map(int, input().split())
# time = 240 - road_time #Получаю время на решение задач
# time_task = 0 # Тут считаю время которое он тратит на задачи
# ticket = 0 # Решенные задачи
# task = 1 # Номер задачи
# while number_tasks > 0:
#     time_task += task * 5
#     if time < time_task:
#         break
#     ticket += 1
#     task += 1
#     number_tasks -= 1
# print(ticket)

'''или'''

# number_tasks, road_time = map(int,input().split())
# task = 0
# while 240 - road_time >=0 and number_tasks >= task:
#     task += 1
#     road_time = road_time + task * 5
# print(task - 1)

'''----------------------------'''
