from string import ascii_lowercase

'''Сформировать кортеж, содержащий натуральные числа в интервале [a; b] и вывести его на экран.'''

# a, b = int(input()), int(input())
# my_tuple = tuple(range(a, b + 1))
# print

'''----------------------------------------'''

'''Сформировать кортеж, содержащий нечетные натуральные числа в интервале n, n**2 и вывести его на экран.'''

# num = int(input())
# my_tuple = tuple(i for i in range(num, num**2 + 1) if i % 2 != 0)
# print(my_tuple)

'''----------------------------------------'''

'''На вход программе поступает целое число n. 
Вам необходимо создать словарь, который будет включать в себя ключи от 1 до n, 
а значениями соответствующего ключа будет значение ключа в квадрате.
В качестве ответа выведите полученный словарь'''

# n = int(input())
# new_dict = {}
# for key in range(1, n + 1):
#     new_dict[key] = key ** 2
# print(new_dict)

'''----------------------------------------'''

'''Напишите программу, которая печатает словарь alphabet, 
где ключи  - строчные английские символы, а значения - порядковые номера букв в алфавите начиная с 1.
Начало вашего словаря должны быть таким {"a": 1, "b": 2 ... }
В качестве ответа распечатайте полученный словарь alphabet'''

# alphabet = {}
# key = 1
# for letter in ascii_lowercase:
#     alphabet[letter] = key
#     key += 1
# print(alphabet)

'''----------------------------------------'''

'''Есть два словаря, нужно в словарь d2 вмержить словарь d1 при помощи метода update
В качестве ответа выведите словарь d2'''

# d1 = {'a': 100, 'b': 200, 'c': 333}
# d2 = {'x': 300, 'y': 200, 'z': 777}
# d2.update(d1)
# print(d2)

'''----------------------------------------'''

'''Система должна работать по следующему принципу. 
Каждый раз, когда новый пользователь хочет зарегистрироваться, он посылает системе запрос name со своим именем. 
Если данное имя не содержится в базе данных системы, то оно заносится туда и пользователю возвращается ответ OK, 
подтверждающий успешную регистрацию. 
Если же на сайте уже присутствует пользователь с именем name, 
то система формирует новое имя и выдает его пользователю в качестве подсказки, 
при этом подсказка также добавляется в базу данных. Новое имя формируется по следующему правилу. 
К name последовательно приписываются числа, начиная с единицы (name1, name2, ...), и 
среди них находят такое наименьшее i, что namei не содержится в базе данных сайта.'''

# num = int(input())
# data_base = {}
# for i in range(num):
#     name = input()
#     if name in data_base:
#         print(f'{name}{data_base[name]}')
#         data_base[name] += 1
#     else:
#         print('OK')
#         data_base[name] = 1

'''----------------------------------------'''

'''Переменные countries соединяют ряд стран с тремя крупнейшими городами каждой страны. 
Программе на вход будет поступать название города в переменную city.
ваша задача найти какой стране принадлежит введенный город.'''

# countries = {
#     "Sweden": ["Stockholm", "Göteborg", "Malmö"],
#     "Norway": ["Oslo", "Bergen", "Trondheim"],
#     "England": ["London", "Birmingham", "Manchester"],
#     "Germany": ["Berlin", "Hamburg", "Munich"],
#     "France": ["Paris", "Marseille", "Toulouse"]
# }
#
# city = input()
# flag = False
# for key, name_city in countries.items():
#     if city in name_city:
#         print(f'INFO: {city} is a city in {key}')
#         flag = True
# if flag == False:
#     print(f'ERROR: Country for {city} not found')

'''----------------------------------------'''

'''Перед вами словарь workers
Ваша задача поднять зарплату Бреду до 8500 и затем вывести измененный словарь workers'''

# workers = {
#     'employer1': {'name': 'Jhon', 'salary': 7500},
#     'employer2': {'name': 'Emma', 'salary': 8000},
#     'employer3': {'name': 'Brad', 'salary': 500}
# }
#
# for i in workers:
#     if workers[i]['name'] == 'Brad':
#         workers[i]['salary'] = 8500
#
# print(workers)

'''----------------------------------------'''

'''Теперь ваша задача научиться использовать словарь для подсчета количества. 
Вашей программе поступает на вход строка, 
вам необходимо подсчитать сколько раз встретилась каждая буква в этой строке без учета регистра, 
при этом цифры и символы пунктуации нужно пропустить. 
Ответ нужно сохранить в словаре, в котором ключ - буква, 
а значение - количество раз, сколько эта буква встретилась в строке. 
В качестве ответа нужно вывести словарь'''

# word = input().lower()
# answer = {}
# for letter in word:
#     if letter.isalpha():
#         if letter not in answer:
#             answer[letter] = 1
#         else:
#             answer[letter] += 1
#
# print(answer)

'''----------------------------------------'''

'''Cтрока S1 называется анаграммой строки S2, если она получается из S2 перестановкой символов.
Программа получает на вход две строки S1 и S2. Если строка S1 является анаграммой строки S2 нужно вывести YES,
противном случае - NO'''

# s1, s2 = input(), input()
# d1, d2 = {}, {}
#
# for letter in s1:
#     d1[letter] = d1.get(letter, 0) + 1
# for letter in s2:
#     d2[letter] = d2.get(letter, 0) + 1
#
# if d1 == d2:
#     print('YES')
# else:
#     print('NO')

'''----------------------------------------'''

'''Вам дан английский текст. 
Закодируйте его с помощью азбуки Морзе.
Каждая буква заменяется на последовательность точек и тире. 
В качестве тире используйте обычный дефис: «-», а в качестве точки — точку «.». 
Например, буква «g» превратится в трёхсимвольную строку «--.». 
Ниже в переменной morze для вашего удобства хранится словарь соответствия английских букв коду Морзе. '''

# morze = {'a': '•—', 'b': '—•••', 'c': '—•—•', 'd': '—••',
#          'e': '•', 'f': '••—•', 'g': '——•', 'h': '••••',
#          'i': '••', 'j': '•———', 'k': '—•—', 'l': '•—••',
#          'm': '——', 'n': '—•', 'o': '———', 'p': '•——•',
#          'q': '——•—', 'r': '•—•', 's': '•••', 't': '—',
#          'u': '••—', 'v': '•••—', 'w': '•——', 'x': '—••—',
#          'y': '—•——', 'z': '——••'}
#
# words = input().lower().split()
# for word in words:
#     for letter in word:
#         print(morze[letter], end=' ')
#     print()

'''----------------------------------------'''

'''На основании переменной persons, в которой хранится список кортежей, в каждом кортеже хранится имя, 
зарплата, пол и паспорт человека.
Ваша задача создать словарь, где ключами будут имена, 
а значениями словарь из трех ключей: salary, gender и passport'''


# persons= [
#     ('Allison Hill', 334053, 'M', '1635644202'),
#     ('Megan Mcclain', 191161, 'F', '2101101595'),
#     ('Brandon Hall', 731262, 'M', '6054749119'),
#     ('Michelle Miles', 539898, 'M', '1355368461'),
#     ('Donald Booth', 895667, 'M', '7736670978'),
#     ('Gina Moore', 900581, 'F', '7018476624'),
#     ('James Howard', 460663, 'F', '5461900982'),
#     ('Monica Herrera', 496922, 'M', '2955495768'),
#     ('Sandra Montgomery', 479201, 'M', '5111859731'),
#     ('Amber Perez', 403445, 'M', '0602870126')
# ]
#
#
# data = {}
#
# for i in persons:
#     data[i[0]] = {'salary': i[1], 'gender': i[2], 'passport': i[3]}
# print(data)

'''----------------------------------------'''

'''Ваша задача получить значения ключа first_name у всех элементов и вывести их в алфавитном порядке, 
каждое имя с новой строки'''

# data = {
#     "my_friends": {
#         "count": 10,
#         "people": [{
#             "first_name": "Kurt",
#             "id": 621547005,
#             "last_name": "Cobain",
#             "bdate": "31.8.2005"
#         }, {
#             "first_name": "Виолетта",
#             "id": 484200150,
#             "last_name": "Кастилио",
#         }, {
#             "first_name": "Иринка",
#             "id": 21886133,
#             "last_name": "Бушуева",
#             "bdate": "28.8.1942"
#         }, {
#             "first_name": "Данил",
#             "id": 282456573,
#             "last_name": "Греков",
#             "bdate": "4.7.2002"
#         }, {
#             "first_name": "Валентин",
#             "id": 184902932,
#             "last_name": "Долматов",
#             "bdate": "25.5"
#         }, {
#             "first_name": "Евгений",
#             "id": 620469646,
#             "last_name": "Шапорин",
#             "bdate": "6.12.1982"
#         }, {
#             "first_name": "Ангелина",
#             "id": 622328862,
#             "last_name": "Краснова",
#             "bdate": "4.11.1995"
#         }, {
#             "first_name": "Иван",
#             "id": 576015198,
#             "last_name": "Вирин",
#             "bdate": "2.2.1915"
#         }, {
#             "first_name": "Паша",
#             "id": 386922406,
#             "last_name": "Воронов",
#             "bdate": "27.9"
#         }, {
#             "first_name": "Ольга",
#             "id": 622170942,
#             "last_name": "Савченкова",
#             "bdate": "20.12"
#         }]
#     }
# }
#
# name = []
#
# for i in data["my_friends"]["people"]:
#     for key, value in i.items():
#         if key == 'first_name':
#             name.append(value)
# for i in sorted(name):
#     print(i)

flag = True
while flag:
    num_1 = int(input())
    print(a)
    if a == 'no':
        flag = False